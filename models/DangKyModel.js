const db = require('../config/database');

const DangKyModel = {
  // üîç Ki·ªÉm tra t√†i kho·∫£n tr√πng (username = phone)
  findByUsername: async (phone) => {
    const [rows] = await db.execute(
      'SELECT * FROM TaiKhoan WHERE TenTaiKhoan = ?',
      [phone]
    );
    return rows[0];
  },

  // üîç Ki·ªÉm tra m√£ h·ªçc sinh t·ªìn t·∫°i
  findStudentById: async (studentId) => {
    const [rows] = await db.execute(
      'SELECT * FROM HocSinh WHERE MaHocSinh = ?',
      [studentId]
    );
    return rows[0];
  },

  // üß© T·∫°o t√†i kho·∫£n v√† ph·ª• huynh
  createUser: async (username, password, studentId, phone, fullName) => {
    const conn = await db.getConnection();
    try {
      await conn.beginTransaction();

      // Th√™m v√†o b·∫£ng TaiKhoan (username = phone)
      await conn.execute(
        `INSERT INTO TaiKhoan (TenTaiKhoan, MatKhau, LoaiTaiKhoan)
         VALUES (?, ?, 'Ph·ª• huynh')`,
        [username, password]
      );

      // Th√™m v√†o b·∫£ng PhuHuynh
      await conn.execute(
        `INSERT INTO PhuHuynh (HoTen, SDT, MaHocSinh)
         VALUES (?, ?, ?)`,
        [fullName, phone, studentId]
      );

      await conn.commit();
      console.log('‚úÖ T·∫°o t√†i kho·∫£n v√† ph·ª• huynh th√†nh c√¥ng!');
    } catch (err) {
      await conn.rollback();
      console.error('‚ùå L·ªói khi t·∫°o t√†i kho·∫£n:', err);
      throw err;
    } finally {
      conn.release();
    }
  },
};

module.exports = DangKyModel;
